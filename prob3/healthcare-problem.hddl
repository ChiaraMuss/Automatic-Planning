(define (problem healthcare-problem-htn)
  (:domain healthcare-htn)

  (:objects
    central_warehouse entrance location1 location2 - location
    scalpel tongue_depressor aspirin - content
    box1 box2 box3 - box
    robot1 robot2 - robot
    accompany_robot1 - accompany_robot
    patient1 patient2 - patient
    medical_unit1 medical_unit2 - medical_unit
  )

  (:init
    (robot_at robot1 central_warehouse)
    (robot_at robot2 entrance)
    (robot_at accompany_robot1 entrance)
    (patient_at patient1 entrance)
    (patient_at patient2 entrance)

    (at_box box1 central_warehouse)
    (at_box box2 central_warehouse)
    (at_box box3 central_warehouse)
    (at_content scalpel central_warehouse)
    (at_content tongue_depressor central_warehouse)
    (at_content aspirin central_warehouse)

    (carrier_capacity robot1 3)
    (carrier_capacity robot2 2)

    (connected central_warehouse entrance)
    (connected entrance location1)
    (connected location1 location2)

    (at_location medical_unit1 location1)
    (at_location medical_unit2 location2)
  )

  (:htn
    :tasks (and
      (task0 (deliver_supplies robot1 medical_unit1 scalpel box1))
      (task1 (accompany_patients accompany_robot1 patient1 medical_unit1))
      (task2 (deliver_supplies robot1 medical_unit2 aspirin box2))
      (task3 (accompany_patients accompany_robot1 patient2 medical_unit2))
    )
    :ordering (and
      (task0 < task1)
      (task1 < task2)
      (task2 < task3)
    )
  )
)
