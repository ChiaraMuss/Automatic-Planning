(define (problem healthcare-problem)
  (:domain healthcare3)

  (:objects
    central_warehouse - inventory
    entrance location1 location2 - location
    scalpel tongue_depressor aspirin bolt tool valve - supply
    box1 box2 box3 box4 box5 box6 box7 box8 box9 box10 - box
    delivery_robot1 delivery_robot2 - delivery_robot
    accompany_robot1 - accompany_robot
    carrier1 carrier2 carrier3 carrier4 - carrier
    rocco ciro - patient
    medical_unit1 medical_unit2 medical_unit3 - medical_unit
  )

  (:htn
    :parameters ()
    :subtasks (and
      ;; Deliver supplies to medical units
      (task0 (deliver_supply_to_medical_unit medical_unit1 aspirin scalpel))
      (task1 (deliver_supply_to_medical_unit medical_unit2 tongue_depressor))
      (task2 (deliver_supply_to_medical_unit medical_unit3 bolt tool valve))

      ;; Deliver patients to medical units
      (task3 (deliver_patient rocco medical_unit1))
      (task4 (deliver_patient ciro medical_unit2))
    )
    :ordering (and
      (task0 < task1)
      (task1 < task2)
      (task2 < task3)
      (task3 < task4)
    )
  )

  (:init
    ;; Initial positions of robots
    (robot_at delivery_robot1 central_warehouse)
    (robot_at delivery_robot2 central_warehouse)
    (robot_at accompany_robot1 entrance)
    
    ;; Initial positions of patients
    (patient_at rocco entrance)
    (patient_at ciro entrance)
    
    ;; Accompanying robot is free to accompany patients
    (free_to_accompany accompany_robot1)
    
    ;; Initial positions of boxes
    (at_box box1 central_warehouse)
    (at_box box2 central_warehouse)
    (at_box box3 central_warehouse)
    (at_box box4 central_warehouse)
    (at_box box5 central_warehouse)
    (at_box box6 central_warehouse)
    (at_box box7 central_warehouse)
    (at_box box8 central_warehouse)
    (at_box box9 central_warehouse)
    (at_box box10 central_warehouse)

    ;; Initial positions of carriers
    (robot_has_carrier delivery_robot1 carrier1)
    (robot_has_carrier delivery_robot2 carrier2)
    
    ;; Carrier capacities
    (= (carrier_capacity carrier1) 3)
    (= (carrier_capacity carrier2) 2)
    (= (carrier_capacity carrier3) 4)
    (= (carrier_capacity carrier4) 5)

    ;; Initial usage of carriers
    (= (carrier_used carrier1) 0)
    (= (carrier_used carrier2) 0)
    (= (carrier_used carrier3) 0)
    (= (carrier_used carrier4) 0)

    ;; Medical unit inventory for supplies
    (= (med_unit_inventory_of medical_unit1 aspirin) 0)
    (= (med_unit_inventory_of medical_unit1 scalpel) 0)
    (= (med_unit_inventory_of medical_unit2 tongue_depressor) 0)
    (= (med_unit_inventory_of medical_unit3 bolt) 0)
    (= (med_unit_inventory_of medical_unit3 tool) 0)
    (= (med_unit_inventory_of medical_unit3 valve) 0)

    ;; Contents of the boxes
    (contains box1 aspirin)
    (contains box2 aspirin)
    (contains box3 scalpel)
    (contains box4 scalpel)
    (contains box5 tongue_depressor)
    (contains box6 tongue_depressor)
    (contains box7 bolt)
    (contains box8 tool)
    (contains box9 valve)
    (contains box10 valve)
    
    ;; Connections between locations
    (connected central_warehouse location1)
    (connected location1 central_warehouse)
    (connected location1 location2)
    (connected location2 location1)
    (connected location1 medical_unit2)
    (connected medical_unit2 location1)
    (connected location2 medical_unit1)
    (connected medical_unit1 location2)
    (connected entrance location2)
    (connected location2 entrance)
  )
)
