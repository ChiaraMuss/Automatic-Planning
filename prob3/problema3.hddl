(define (problem healthcare-problem)
  (:domain healthcare3)
  (:objects
    central_warehouse heliport_alpha - inventory
    entrance sector_a sector_b sector_c - location
    scalpel tongue_depressor aspirin - content
    box1 box2 box3 box4 box5 box6 box7 box8 box9 box10 - box
    delivery_robot1 delivery_robot2 - delivery_robot
    accompany_robot1 - accompany_robot
    drone1 drone2 - drone
    carrier1 carrier2 carrier3 carrier4 - carrier
    rocco ciro - patient
    cardiology dentistry radiology neuro_surgery day_hospital - medical_unit
  )

  ;; **Task principale da risolvere**
  (:htn
    :tasks (and
      ;; **Task per la consegna dei rifornimenti**
      (deliver-supply scalpel rocco cardiology box1 delivery_robot1 entrance carrier1)
      (deliver-supply tongue_depressor ciro neuro_surgery box2 delivery_robot2 sector_a carrier2)
      
      ;; **Task per il trasporto del paziente**
      (deliver-patient accompany_robot1 cardiology rocco)
      (deliver-patient accompany_robot1 neuro_surgery ciro)
    )
  )

  (:init
    ;; **Connessioni tra le location**
    (connected entrance sector_a) (connected sector_a entrance)
    (connected sector_a sector_b) (connected sector_b sector_a)
    (connected sector_b sector_c) (connected sector_c sector_b)
    (connected sector_c entrance) (connected entrance sector_c)

    ;; **Posizione iniziale di contenuti e pazienti**
    (at_box box1 entrance)
    (at_box box2 sector_a)
    (patient_at rocco sector_b)
    (patient_at ciro sector_c)

    ;; **Capacità dei carrier**
    (capacity carrier1 1)
    (capacity carrier2 2)
    (capacity carrier3 2)
    (capacity carrier4 1)

    ;; **Stato iniziale dei robot**
    (robot_at delivery_robot1 entrance)
    (robot_at delivery_robot2 sector_a)
    (robot_at accompany_robot1 sector_c)
    (robot_has_carrier delivery_robot1 carrier1)
    (robot_has_carrier delivery_robot2 carrier2)
    (carrier_at carrier1 entrance)
    (carrier_at carrier2 sector_a)
    (free delivery_robot1)
    (free delivery_robot2)
    (free_to_accompany accompany_robot1)

    ;; **Stato iniziale delle scatole**
    (empty box1)
    (empty box2)
    (contains box1 scalpel)
    (contains box2 tongue_depressor)

    ;; **Disponibilità dei droni**
    (has_drone_port sector_c)
  )
)

